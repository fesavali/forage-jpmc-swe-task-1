From 220b3a349b153d1f1ae0c8ee7fa655d430505f2b Mon Sep 17 00:00:00 2001
From: fesavali <felixnzioki99@gmail.com>
Date: Mon, 25 Sep 2023 17:44:35 +0300
Subject: [PATCH 1/2] update client 3

---
 client3.py | 28 +++++++++++++++++++---------
 1 file changed, 19 insertions(+), 9 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..1034812 100644
--- a/client3.py
+++ b/client3.py
@@ -25,35 +25,45 @@ import urllib.request
 # Server API URLs
 QUERY = "http://localhost:8080/query?id={}"
 
-# 500 server request
+# 500 server requests
 N = 500
 
 
 def getDataPoint(quote):
     """ Produce all the needed values to generate a datapoint """
-    """ ------------- Update this function ------------- """
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price + ask_price) / 2  # Calculate the average of bid and ask prices
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
-    """ ------------- Update this function ------------- """
-    return 1
+    if price_b == 0:
+        # Avoid division by zero
+        return
+    return price_a / price_b
 
 
 # Main
 if __name__ == "__main__":
+    # Initialize variables to store stock prices
+    stock_a_price = 0.0
+    stock_b_price = 0.0
+
     # Query the price once every N seconds.
-    for _ in iter(range(N)):
+    for _ in range(N):
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
-        """ ----------- Update to get the ratio --------------- """
+        # Update stock prices for two stocks
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
-            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+            if stock == 'stockA':
+                stock_a_price = price
+            elif stock == 'stockB':
+                stock_b_price = price
 
-        print("Ratio %s" % getRatio(price, price))
+        # Calculate and print the ratio of stockA price to stockB price
+        ratio = getRatio(stock_a_price, stock_b_price)
+        print(f"StockA Price: {stock_a_price}, StockB Price: {stock_b_price}, Ratio: {ratio}")
-- 
2.39.2

